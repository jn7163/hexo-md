---
title: C++ STL入门
date: 2017-09-04 13:35:00
categories:
- cpp
tags:
- cpp
keywords: C++ STL入门
---

> 
C++ STL入门，`标准模板库（Standard Template Library）`，STL可分为`容器(containers)`、`迭代器(iterators)`、`算法(algorithms)`、`适配器(adapters)`、`空间配置器(allocator)`、`仿函数(functors)`六个部分

<!-- more -->

## 前言
STL 提供了一些常用的数据结构和算法的模板，1998 年加入 C++ 标准；STL 中有三个重要的概念：
- `容器`：容纳各种数据类型的数据结构，是一系列的类模板；
- `迭代器`：迭代器用来迭代地访问容器中的元素；
- `算法`：用来操作容器中的元素，是一系列的函数模板；


> 
`容器`："数据结构"的泛指、`迭代器`："指针"的泛指、`算法`："算法"的泛指；


**STL 容器**
STL 中的容器定义在`std`命名空间下，需要引入头文件`<vector>`、`<set>`、`<map>`、`<deque>`、`<list>`、`<stack>`等；容器可以分为三大类：
- **顺序容器**
 - `vector`：尾端插入元素有较高性能，动态数组实现；
 - `deque`：首尾插入元素都有较高性能，动态数组实现；
 - `list`：可以常数时间在任何地方插入元素，双向链表实现；
- **关联容器**
 - `set`：不同元素的集合，平衡二叉树实现；
 - `multiset`：同上，但可以包含相同元数据；
 - `map`：同 set，但存放的是键值对；
 - `multimap`：同上，键可以重复；
- **容器适配器**
 - `stack`：栈，后进先出（LIFO）的数据结构；
 - `queue`：队列，先进先出（FIFO）的数据结构；
 - `priority_queue`；优先队列，队列的一种，可以自定义数据的优先级，进行动态排序；


这些容器有一些通用的方法：`empty`、`size`、`swap`、`max_size`；
顺序容器和关联容器支持迭代器，称为`第一类容器`；
顺序容器还有以下通用方法：`front`、`back`、`pop_back`、`push_back`

存储键值对关联容器`map`和`multimap`的迭代器是一个`pair<T1, T2>`的指针；
插入时，可以使用`[]`运算符，也可以使用`insert`方法，它接受一个`pair<T1, T2>`对象：

容器适配器是逻辑数据结构，需要用一种顺序容器来实现；例如，stack 默认使用 deque 来实现，我们也可以指定它的实现方式；

> 
容器之间的比较取决于第一个不等的元素；如果长度相同且所有元素相等，两个容器相等；如果一个是另一个的子序列，则较短的容器小于较长的容器；


**STL 迭代器**
> 
只有第一类容器支持迭代器（容器适配器不支持迭代器）；

迭代器按功能的强弱分为 5 类：
- `Input Iterator`：提供只读访问
- `Output Iterator`：提供只写访问
- `Forward Iterator`：支持逐个向后迭代访问
- `Bidirectional Iterator`：能够双向地逐个迭代访问
- `Random Access Iterator`：可随机访问每个元素
例如，双向迭代器不支持<，>，[]运算符，只能判等：

list<int> l;
for(list<int>::const_iterator i = l.begin(); i != l.end(); ++i){
    cout<<*i;
} 
vector和deque支持Random Access Iterator，list、set/multiset、map/multimap支持Bidirectional Iterator。
